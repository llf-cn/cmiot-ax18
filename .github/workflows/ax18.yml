name: Build OpenWrt for CMIOT-AX18

on:
  workflow_dispatch:
  schedule:
    - cron: '0 20 * * *'

env:
  REPO_URL: https://github.com/LiBwrt/openwrt-6.x.git
  REPO_BRANCH: k6.12-nss
  CONFIG_FILE: configs/cmiot-ax18.config
  DIY_SCRIPT: diy-script.sh
  UPLOAD_FIRMWARE: true
  FIRMWARE_TAG: CMIOT-AX18
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialize build environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android "$AGENT_TOOLSDIRECTORY"
          sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* dotnet* google* firefox powershell openjdk* mongodb* moby* || true
          sudo -E apt-get -y update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git gperf intltool libncurses5-dev libssl-dev libxml-parser-perl patch psmisc qemu-utils scons subversion unzip zlib1g-dev libgmp-dev libmpc-dev libmpfr-dev rsync wget
          sudo timedatectl set-timezone "$TZ"

      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          swap-size-mb: 1024
          root-reserve-mb: 1024

      - name: Clone OpenWrt source code
        run: |
          git clone --depth=1 -b $REPO_BRANCH $REPO_URL openwrt
          echo "OPENWRT_PATH=$PWD/openwrt" >> $GITHUB_ENV

      - name: Load custom configuration and scripts
        run: |
          cd $OPENWRT_PATH
          # 将我们的配置文件复制到正确位置
          cp $GITHUB_WORKSPACE/$CONFIG_FILE .config
          # 将我们的 DIY 脚本复制到正确位置并赋予执行权限
          cp $GITHUB_WORKSPACE/$DIY_SCRIPT ./
          chmod +x ./$DIY_SCRIPT
          # 运行 DIY 脚本，例如添加新的 feeds 源
          ./$DIY_SCRIPT

      - name: Update and install feeds
        run: |
          cd $OPENWRT_PATH
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate final .config
        run: |
          cd $OPENWRT_PATH
          # 仅运行一次 make defconfig 来生成完整配置
          make defconfig

      - name: Download packages
        run: |
          cd $OPENWRT_PATH
          make download -j$(nproc)

      - name: Compile the firmware
        id: compile
        run: |
          cd $OPENWRT_PATH
          echo -e "$(nproc) thread compile"
          make -j$(nproc) || make -j1 V=s
          echo "status=success" >> $GITHUB_OUTPUT
          echo "FILE_DATE=$(date +"%Y%m%d")" >> $GITHUB_ENV
          grep -q "DEVICE_cmiot_ax18=y" .config && echo "FIRMWARE_DEVICE=CMIOT_AX18" >> $GITHUB_ENV || echo "FIRMWARE_DEVICE=UNKNOWN" >> $GITHUB_ENV

      - name: Organize files
        id: organize
        if: steps.compile.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true'
        run: |
          cd $OPENWRT_PATH/bin/targets/qualcommax/ipq60xx
          # 检查是否生成了正确的文件
          if [ -f *cmiot_ax18-squashfs-sysupgrade.bin ]; then
            echo "Successfully built firmware for CMIOT_AX18."
            mkdir -p firmware
            mv *cmiot_ax18-squashfs-sysupgrade.bin firmware/
            if [ -f *cmiot_ax18-squashfs-factory.ubi ]; then
              mv *cmiot_ax18-squashfs-factory.ubi firmware/
            fi
            echo "FIRMWARE_PATH=$PWD/firmware" >> $GITHUB_ENV
            echo "release_name=OpenWrt for ${FIRMWARE_DEVICE} - ${{ env.FILE_DATE }}" >> $GITHUB_ENV
          else
            echo "::error::Failed to find firmware file for cmiot_ax18. Build might have defaulted to another device."
            exit 1
          fi

      - name: Upload Firmware to Release
        if: steps.organize.outputs.FIRMWARE_PATH != ''
        uses: ncipollo/release-action@v1
        with:
          name: ${{ steps.organize.outputs.release_name }}
          allowUpdates: true
          tag: ${{ env.FIRMWARE_TAG }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "${{ steps.organize.outputs.FIRMWARE_PATH }}/*"
          body: |
            **OpenWrt Firmware for CMIOT-AX18**
            - **Default IP:** 192.168.0.1
            - **Default Password:** password
            - **Kernel:** Based on branch `${{ env.REPO_BRANCH }}`
